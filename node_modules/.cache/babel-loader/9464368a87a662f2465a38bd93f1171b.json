{"ast":null,"code":"var _jsxFileName = \"G:\\\\Developer\\\\ReactJs\\\\abc\\\\src\\\\components\\\\QuantityField\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nQuantityField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  quantity: PropTypes.number,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  setQuantity: PropTypes.func\n};\nconst useStyles = makeStyles(theme => ({\n  box: {\n    justifyContent: \"space-around\",\n    display: \"flex\",\n    flexFlow: \"row nowrap\",\n    alignItems: \"center\",\n    maxWidth: 200,\n    margin: 0\n  },\n  button: {\n    cursor: \"pointer\",\n    width: theme.spacing(4.5),\n    height: theme.spacing(3.5),\n    background: theme.palette.background.default,\n    border: `0.5px solid ${theme.palette.grey[500]}`,\n    color: theme.palette.text.primary,\n    fontSize: 16,\n    \"&:hover\": {\n      background: theme.palette.action.focus\n    }\n  },\n  notchedOutline: {\n    padding: 0\n  },\n  root: {\n    flexGrow: 1,\n    borderRadius: 0\n  },\n  input: {\n    padding: 0,\n    textAlign: \"center\",\n    width: theme.spacing(5),\n    height: theme.spacing(3.5),\n    fontSize: 14\n  }\n}));\n\nfunction QuantityField(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    form,\n    name,\n    disabled,\n    fullWidth,\n    setQuantity\n  } = props;\n  const {\n    setValue\n  } = form;\n\n  const setNewQuantity = (name, quantity, value) => {\n    const newQuantity = parseInt(value) + quantity;\n    if (setQuantity) setQuantity(newQuantity);\n    setValue(name, newQuantity);\n  };\n\n  const changeHandler = (name, value) => {\n    if (setQuantity) setQuantity(parseInt(value));\n    setValue(name, parseInt(value <= 0 ? 1 : value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: fullWidth,\n    children: /*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: form.control,\n      render: ({\n        field: {\n          onChange,\n          onBlur,\n          value,\n          name,\n          ref\n        }\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.box,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setNewQuantity(name, -1, value),\n            className: classes.button,\n            disabled: value <= 1,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            margin: \"dense\",\n            classes: {\n              root: classes.root,\n              input: classes.input\n            },\n            id: name,\n            type: \"number\",\n            disabled: disabled,\n            value: value <= 0 ? 1 : value >= 100 ? 100 : value,\n            onChange: onChange,\n            onBlur: e => changeHandler(name, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setNewQuantity(name, 1, value),\n            className: classes.button,\n            disabled: value >= 100,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuantityField, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = QuantityField;\nexport default QuantityField;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuantityField\");","map":{"version":3,"sources":["G:/Developer/ReactJs/abc/src/components/QuantityField/index.js"],"names":["Box","makeStyles","FormControl","OutlinedInput","PropTypes","React","Controller","QuantityField","propTypes","form","object","isRequired","name","string","quantity","number","label","disabled","bool","setQuantity","func","useStyles","theme","box","justifyContent","display","flexFlow","alignItems","maxWidth","margin","button","cursor","width","spacing","height","background","palette","default","border","grey","color","text","primary","fontSize","action","focus","notchedOutline","padding","root","flexGrow","borderRadius","input","textAlign","props","classes","fullWidth","setValue","setNewQuantity","value","newQuantity","parseInt","changeHandler","control","field","onChange","onBlur","ref","e","target"],"mappings":"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","sourcesContent":["import { Box, makeStyles } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Controller } from \"react-hook-form\";\n\nQuantityField.propTypes = {\n  form: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  quantity: PropTypes.number,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  setQuantity: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    justifyContent: \"space-around\",\n    display: \"flex\",\n    flexFlow: \"row nowrap\",\n    alignItems: \"center\",\n    maxWidth: 200,\n    margin: 0,\n  },\n\n  button: {\n    cursor: \"pointer\",\n    width: theme.spacing(4.5),\n    height: theme.spacing(3.5),\n    background: theme.palette.background.default,\n    border: `0.5px solid ${theme.palette.grey[500]}`,\n    color : theme.palette.text.primary,\n    fontSize: 16,\n    \"&:hover\": {\n      background: theme.palette.action.focus,\n    },\n  },\n  notchedOutline: {\n    padding: 0,\n  },\n  root: {\n    flexGrow: 1,\n    borderRadius: 0,\n  },\n  input: {\n    padding: 0,\n    textAlign: \"center\",\n    width: theme.spacing(5),\n    height: theme.spacing(3.5),\n    fontSize: 14,\n  },\n}));\n\nfunction QuantityField(props) {\n  const classes = useStyles();\n  const { form, name, disabled, fullWidth, setQuantity } = props;\n  const { setValue } = form;\n  const setNewQuantity = (name, quantity, value) => {\n    const newQuantity = parseInt(value) + quantity;\n    if (setQuantity) setQuantity(newQuantity);\n    setValue(name, newQuantity);\n  };\n  const changeHandler = (name, value) => {\n    if (setQuantity) setQuantity(parseInt(value));\n    setValue(name, parseInt(value <= 0 ? 1 : value));\n  };\n  return (\n    <FormControl variant=\"outlined\" size=\"small\" fullWidth={fullWidth}>\n      <Controller\n        name={name}\n        control={form.control}\n        render={({ field: { onChange, onBlur, value, name, ref } }) => {\n          return (\n            <Box className={classes.box}>\n              <button\n                type=\"button\"\n                onClick={() => setNewQuantity(name, -1, value)}\n                className={classes.button}\n                disabled={value <= 1}\n              >\n                -\n              </button>\n              <OutlinedInput\n                margin=\"dense\"\n                classes={{\n                  root: classes.root,\n                  input: classes.input,\n                }}\n                id={name}\n                type=\"number\"\n                disabled={disabled}\n                value={value <= 0 ? 1 : value >= 100 ? 100 : value}\n                onChange={onChange}\n                onBlur={(e) => changeHandler(name, e.target.value)}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setNewQuantity(name, 1, value)}\n                className={classes.button}\n                disabled={value >= 100}\n              >\n                +\n              </button>\n            </Box>\n          );\n        }}\n      />\n    </FormControl>\n  );\n}\n\nexport default QuantityField;\n"]},"metadata":{},"sourceType":"module"}