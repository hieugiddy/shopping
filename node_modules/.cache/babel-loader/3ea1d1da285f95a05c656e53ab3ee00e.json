{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItem: [],\n    isShowMiniCart: false\n  },\n  reducers: {\n    showMiniCart(state) {\n      state.isShowMiniCart = true;\n    },\n\n    hideMiniCart(state) {\n      state.isShowMiniCart = false;\n    },\n\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const index = state.cartItem.findIndex(x => x.id === newItem.id);\n\n      if (index >= 0) {\n        state.cartItem[index].quantity += newItem.quantity;\n      } else {\n        state.cartItem.push(newItem);\n      }\n    },\n\n    setQuantity(state, action) {\n      const {\n        id,\n        quantity\n      } = action.payload;\n      const index = state.cartItem.findIndex(x => x.id === id);\n      console.log(index);\n\n      if (index >= 0) {\n        state.cartItem[index].quantity = quantity;\n      }\n    },\n\n    removeCart(state, action) {\n      const id = action.payload;\n      const index = state.cartItem.findIndex(x => x.id === id);\n      state.cartItem.splice(index, 1);\n    }\n\n  }\n});\nconst {\n  actions,\n  reducer\n} = cartSlice;\nexport const {\n  showMiniCart,\n  hideMiniCart,\n  addToCart,\n  removeCart,\n  setQuantity\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["G:/Developer/ReactJs/abc/src/feature/Cart/cartSlice.js"],"names":["createSlice","cartSlice","name","initialState","cartItem","isShowMiniCart","reducers","showMiniCart","state","hideMiniCart","addToCart","action","newItem","payload","index","findIndex","x","id","quantity","push","setQuantity","console","log","removeCart","splice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,cAAc,EAAE;AAFJ,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBA,MAAAA,KAAK,CAACH,cAAN,GAAuB,IAAvB;AACD,KAHO;;AAIRI,IAAAA,YAAY,CAACD,KAAD,EAAQ;AAClBA,MAAAA,KAAK,CAACH,cAAN,GAAuB,KAAvB;AACD,KANO;;AAORK,IAAAA,SAAS,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACvB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,KAAK,GAAGN,KAAK,CAACJ,QAAN,CAAeW,SAAf,CAA0BC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,OAAO,CAACK,EAAjD,CAAd;;AAEA,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACdN,QAAAA,KAAK,CAACJ,QAAN,CAAeU,KAAf,EAAsBI,QAAtB,IAAkCN,OAAO,CAACM,QAA1C;AACD,OAFD,MAEO;AACLV,QAAAA,KAAK,CAACJ,QAAN,CAAee,IAAf,CAAoBP,OAApB;AACD;AACF,KAhBO;;AAiBRQ,IAAAA,WAAW,CAACZ,KAAD,EAAQG,MAAR,EAAgB;AACzB,YAAM;AAAEM,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAmBP,MAAM,CAACE,OAAhC;AACA,YAAMC,KAAK,GAAGN,KAAK,CAACJ,QAAN,CAAeW,SAAf,CAA0BC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASA,EAAzC,CAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;;AACA,UAAIA,KAAK,IAAI,CAAb,EAAgB;AACdN,QAAAA,KAAK,CAACJ,QAAN,CAAeU,KAAf,EAAsBI,QAAtB,GAAiCA,QAAjC;AACD;AACF,KAxBO;;AAyBRK,IAAAA,UAAU,CAACf,KAAD,EAAQG,MAAR,EAAgB;AACxB,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,KAAK,GAAGN,KAAK,CAACJ,QAAN,CAAeW,SAAf,CAA0BC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASA,EAAzC,CAAd;AACAT,MAAAA,KAAK,CAACJ,QAAN,CAAeoB,MAAf,CAAsBV,KAAtB,EAA6B,CAA7B;AACD;;AA7BO;AANkB,CAAD,CAA7B;AAuCA,MAAM;AAAEW,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBzB,SAA7B;AACA,OAAO,MAAM;AACXM,EAAAA,YADW;AAEXE,EAAAA,YAFW;AAGXC,EAAAA,SAHW;AAIXa,EAAAA,UAJW;AAKXH,EAAAA;AALW,IAMTK,OANG;AAOP,eAAeC,OAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItem: [],\n    isShowMiniCart: false,\n  },\n  reducers: {\n    showMiniCart(state) {\n      state.isShowMiniCart = true;\n    },\n    hideMiniCart(state) {\n      state.isShowMiniCart = false;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const index = state.cartItem.findIndex((x) => x.id === newItem.id);\n\n      if (index >= 0) {\n        state.cartItem[index].quantity += newItem.quantity;\n      } else {\n        state.cartItem.push(newItem);\n      }\n    },\n    setQuantity(state, action) {\n      const { id, quantity } = action.payload;\n      const index = state.cartItem.findIndex((x) => x.id === id);\n      console.log(index);\n      if (index >= 0) {\n        state.cartItem[index].quantity = quantity;\n      }\n    },\n    removeCart(state, action) {\n      const id = action.payload;\n      const index = state.cartItem.findIndex((x) => x.id === id);\n      state.cartItem.splice(index, 1);\n    },\n  },\n});\n\nconst { actions, reducer } = cartSlice;\nexport const {\n  showMiniCart,\n  hideMiniCart,\n  addToCart,\n  removeCart,\n  setQuantity,\n} = actions;\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}