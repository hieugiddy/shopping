{"ast":null,"code":"var _jsxFileName = \"G:\\\\Developer\\\\ReactJs\\\\abc\\\\src\\\\feature\\\\Product\\\\components\\\\FilterViewer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Chip, makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    alignItems: \"center\",\n    margin: 0,\n    padding: 0,\n    listStyleType: \"none\",\n    \"& > li\": {\n      margin: 0,\n      padding: theme.spacing(1, 1, 1, 2)\n    }\n  }\n}));\nconst FILTER_LIST = [{\n  id: 1,\n  getLabel: () => \"Giao hàng miễn phí\",\n  isActive: filters => filters.isFreeShip,\n  isVisible: () => true,\n  isRemovable: false,\n  onRemove: () => {},\n  onToggle: filters => {\n    const newFilters = { ...filters\n    };\n\n    if (newFilters.isFreeShip) {\n      delete newFilters.isFreeShip;\n    } else {\n      newFilters.isFreeShip = true;\n    }\n\n    return newFilters;\n  }\n}, {\n  id: 2,\n  getLabel: () => \"Có khuyến mãi\",\n  isActive: () => true,\n  isVisible: filters => filters.isPromotion,\n  isRemovable: true,\n  onRemove: filters => {\n    const newFilters = { ...filters\n    };\n    delete newFilters.isPromotion;\n    return newFilters;\n  },\n  onToggle: () => {}\n}, {\n  id: 3,\n  getLabel: filters => `Từ ${filters.salePrice_gte} đến ${filters.salePrice_lte}`,\n  isActive: () => true,\n  isVisible: filters => filters.salePrice_gte > 0 && filters.salePrice_gte < filters.salePrice_lte,\n  isRemovable: true,\n  onRemove: filters => {\n    const newFilters = { ...filters\n    };\n    delete newFilters.salePrice_lte;\n    delete newFilters.salePrice_gte;\n    return newFilters;\n  },\n  onToggle: () => {}\n}, {\n  id: 4,\n  getLabel: filters => `Danh mục: ${filters[\"category.id\"]}`,\n  isActive: () => true,\n  isVisible: filters => filters[\"category.id\"],\n  isRemovable: true,\n  onRemove: filters => {\n    const newFilters = { ...filters\n    };\n    delete newFilters[\"category.id\"];\n    return newFilters;\n  },\n  onToggle: filters => {}\n}];\nFilterViewer.propTypes = {\n  filters: PropTypes.object,\n  onChange: PropTypes.func\n};\n\nfunction FilterViewer({\n  filters = {},\n  onChange = null\n}) {\n  _s();\n\n  const classes = useStyles();\n  const visibleFilters = useMemo(() => {\n    return FILTER_LIST.filter(x => x.isVisible(filters));\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"ul\",\n    className: classes.root,\n    children: visibleFilters.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Chip, {\n        label: x.getLabel(filters),\n        color: x.isActive(filters) ? \"primary\" : \"default\",\n        clickable: !x.isRemovable,\n        size: \"small\",\n        onClick: x.isRemovable ? null : () => {\n          if (!onChange) return;\n          const newFilters = x.onToggle(filters);\n          onChange(newFilters);\n        },\n        onDelete: x.isRemovable ? () => {\n          if (!onChange) return;\n          const newFilters = x.onRemove(filters);\n          onChange(newFilters);\n        } : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, x.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilterViewer, \"4LieIukBTM3LV5KyViDjqWRGmKk=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterViewer;\nexport default FilterViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterViewer\");","map":{"version":3,"sources":["G:/Developer/ReactJs/abc/src/feature/Product/components/FilterViewer.js"],"names":["React","useMemo","PropTypes","Box","Chip","makeStyles","useStyles","theme","root","display","flexFlow","alignItems","margin","padding","listStyleType","spacing","FILTER_LIST","id","getLabel","isActive","filters","isFreeShip","isVisible","isRemovable","onRemove","onToggle","newFilters","isPromotion","salePrice_gte","salePrice_lte","FilterViewer","propTypes","object","onChange","func","classes","visibleFilters","filter","x","map"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Chip, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    alignItems: \"center\",\n    margin: 0,\n    padding: 0,\n    listStyleType: \"none\",\n\n    \"& > li\": {\n      margin: 0,\n      padding: theme.spacing(1, 1, 1, 2),\n    },\n  },\n}));\n\nconst FILTER_LIST = [\n  {\n    id: 1,\n    getLabel: () => \"Giao hàng miễn phí\",\n    isActive: (filters) => filters.isFreeShip,\n    isVisible: () => true,\n    isRemovable: false,\n    onRemove: () => {},\n    onToggle: (filters) => {\n      const newFilters = { ...filters };\n      if (newFilters.isFreeShip) {\n        delete newFilters.isFreeShip;\n      } else {\n        newFilters.isFreeShip = true;\n      }\n\n      return newFilters;\n    },\n  },\n  {\n    id: 2,\n    getLabel: () => \"Có khuyến mãi\",\n    isActive: () => true,\n    isVisible: (filters) => filters.isPromotion,\n    isRemovable: true,\n    onRemove: (filters) => {\n      const newFilters = { ...filters };\n      delete newFilters.isPromotion;\n      return newFilters;\n    },\n    onToggle: () => {},\n  },\n  {\n    id: 3,\n    getLabel: (filters) =>\n      `Từ ${filters.salePrice_gte} đến ${filters.salePrice_lte}`,\n    isActive: () => true,\n    isVisible: (filters) =>\n      filters.salePrice_gte > 0 &&\n      filters.salePrice_gte < filters.salePrice_lte,\n    isRemovable: true,\n    onRemove: (filters) => {\n      const newFilters = { ...filters };\n      delete newFilters.salePrice_lte;\n      delete newFilters.salePrice_gte;\n      return newFilters;\n    },\n    onToggle: () => {},\n  },\n  {\n    id: 4,\n    getLabel: (filters) => `Danh mục: ${filters[\"category.id\"]}`,\n    isActive: () => true,\n    isVisible: (filters) => filters[\"category.id\"],\n    isRemovable: true,\n    onRemove: (filters) => {\n      const newFilters = { ...filters };\n      delete newFilters[\"category.id\"];\n      return newFilters;\n    },\n    onToggle: (filters) => {},\n  },\n];\n\nFilterViewer.propTypes = {\n  filters: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nfunction FilterViewer({ filters = {}, onChange = null }) {\n  const classes = useStyles();\n\n  const visibleFilters = useMemo(() => {\n    return FILTER_LIST.filter((x) => x.isVisible(filters));\n  }, [filters]);\n\n  return (\n    <Box component=\"ul\" className={classes.root}>\n      {visibleFilters.map((x) => (\n        <li key={x.id}>\n          <Chip\n            label={x.getLabel(filters)}\n            color={x.isActive(filters) ? \"primary\" : \"default\"}\n            clickable={!x.isRemovable}\n            size=\"small\"\n            onClick={\n              x.isRemovable\n                ? null\n                : () => {\n                    if (!onChange) return;\n                    const newFilters = x.onToggle(filters);\n                    onChange(newFilters);\n                  }\n            }\n            onDelete={\n              x.isRemovable\n                ? () => {\n                    if (!onChange) return;\n                    const newFilters = x.onRemove(filters);\n                    onChange(newFilters);\n                  }\n                : null\n            }\n          />\n        </li>\n      ))}\n    </Box>\n  );\n}\n\nexport default FilterViewer;\n"]},"metadata":{},"sourceType":"module"}