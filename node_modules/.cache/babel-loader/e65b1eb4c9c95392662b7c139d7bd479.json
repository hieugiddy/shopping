{"ast":null,"code":"var _jsxFileName = \"D:\\\\Source\\\\ReactJs\\\\react-app\\\\src\\\\feature\\\\Cart\\\\component\\\\CartQuantityForm.js\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { default as React } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport QuantityField from \"../../../components/QuantityField\";\nimport { setQuantity } from \"../cartSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartQuantityForm({\n  onSubmit,\n  id,\n  quantity\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const schema = yup.object().shape({\n    quantity: yup.number().required(\"Please enter quantity !\").min(1, \"Minimum value is 1\").typeError(\"Please enter number \")\n  });\n  const form = useForm({\n    reValidateMode: \"onChange\",\n    mode: \"onTouched\",\n    defaultValues: {\n      quantity: quantity\n    },\n    resolver: yupResolver(schema)\n  });\n\n  const handleSetQuantity = newQuantity => {\n    dispatch(setQuantity({\n      id: id,\n      quantity: newQuantity\n    }));\n  };\n\n  const handleSubmit = values => {\n    if (onSubmit) onSubmit(values);\n    values.id = id;\n    dispatch(setQuantity(values));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: form.handleSubmit(handleSubmit),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-end\",\n      children: /*#__PURE__*/_jsxDEV(QuantityField, {\n        setQuantity: handleSetQuantity,\n        name: \"quantity\",\n        form: form,\n        quantity: quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartQuantityForm, \"TR8dYdjANiEmgZQJ4zP7Mdb3B88=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = CartQuantityForm;\nCartQuantityForm.propTypes = {\n  onSubmit: PropTypes.func\n};\nexport default CartQuantityForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartQuantityForm\");","map":{"version":3,"sources":["D:/Source/ReactJs/react-app/src/feature/Cart/component/CartQuantityForm.js"],"names":["yupResolver","Grid","PropTypes","default","React","useForm","useDispatch","yup","QuantityField","setQuantity","CartQuantityForm","onSubmit","id","quantity","dispatch","schema","object","shape","number","required","min","typeError","form","reValidateMode","mode","defaultValues","resolver","handleSetQuantity","newQuantity","handleSubmit","values","propTypes","func"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAO,IAAIC,KAApB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,EAAZ;AAAgBC,EAAAA;AAAhB,CAA1B,EAAsD;AAAA;;AACpD,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,MAAM,GAAGR,GAAG,CAACS,MAAJ,GAAaC,KAAb,CAAmB;AAChCJ,IAAAA,QAAQ,EAAEN,GAAG,CACVW,MADO,GAEPC,QAFO,CAEE,yBAFF,EAGPC,GAHO,CAGH,CAHG,EAGA,oBAHA,EAIPC,SAJO,CAIG,sBAJH;AADsB,GAAnB,CAAf;AAOA,QAAMC,IAAI,GAAGjB,OAAO,CAAC;AACnBkB,IAAAA,cAAc,EAAE,UADG;AAEnBC,IAAAA,IAAI,EAAE,WAFa;AAGnBC,IAAAA,aAAa,EAAE;AACbZ,MAAAA,QAAQ,EAAEA;AADG,KAHI;AAMnBa,IAAAA,QAAQ,EAAE1B,WAAW,CAACe,MAAD;AANF,GAAD,CAApB;;AAQA,QAAMY,iBAAiB,GAAIC,WAAD,IAAiB;AACzCd,IAAAA,QAAQ,CAACL,WAAW,CAAC;AAAEG,MAAAA,EAAE,EAAEA,EAAN;AAAUC,MAAAA,QAAQ,EAAEe;AAApB,KAAD,CAAZ,CAAR;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,QAAInB,QAAJ,EAAcA,QAAQ,CAACmB,MAAD,CAAR;AACdA,IAAAA,MAAM,CAAClB,EAAP,GAAYA,EAAZ;AACAE,IAAAA,QAAQ,CAACL,WAAW,CAACqB,MAAD,CAAZ,CAAR;AACD,GAJD;;AAKA,sBACE;AAAM,IAAA,QAAQ,EAAER,IAAI,CAACO,YAAL,CAAkBA,YAAlB,CAAhB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,OAAO,EAAC,UAAxC;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,WAAW,EAAEF,iBADf;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAEL,IAHR;AAIE,QAAA,QAAQ,EAAET;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArCQH,gB;UACUJ,W,EAQJD,O;;;KATNK,gB;AAuCTA,gBAAgB,CAACqB,SAAjB,GAA6B;AAC3BpB,EAAAA,QAAQ,EAAET,SAAS,CAAC8B;AADO,CAA7B;AAIA,eAAetB,gBAAf","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { default as React } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport QuantityField from \"../../../components/QuantityField\";\r\nimport { setQuantity } from \"../cartSlice\";\r\n\r\nfunction CartQuantityForm({ onSubmit, id, quantity }) {\r\n  const dispatch = useDispatch();\r\n  const schema = yup.object().shape({\r\n    quantity: yup\r\n      .number()\r\n      .required(\"Please enter quantity !\")\r\n      .min(1, \"Minimum value is 1\")\r\n      .typeError(\"Please enter number \"),\r\n  });\r\n  const form = useForm({\r\n    reValidateMode: \"onChange\",\r\n    mode: \"onTouched\",\r\n    defaultValues: {\r\n      quantity: quantity,\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const handleSetQuantity = (newQuantity) => {\r\n    dispatch(setQuantity({ id: id, quantity: newQuantity }));\r\n  };\r\n  const handleSubmit = (values) => {\r\n    if (onSubmit) onSubmit(values);\r\n    values.id = id;\r\n    dispatch(setQuantity(values));\r\n  };\r\n  return (\r\n    <form onSubmit={form.handleSubmit(handleSubmit)}>\r\n      <Grid container direction=\"row\" justify=\"flex-end\">\r\n        <QuantityField\r\n          setQuantity={handleSetQuantity}\r\n          name=\"quantity\"\r\n          form={form}\r\n          quantity={quantity}\r\n        />\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n\r\nCartQuantityForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default CartQuantityForm;\r\n"]},"metadata":{},"sourceType":"module"}