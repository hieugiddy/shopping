{"ast":null,"code":"var _jsxFileName = \"G:\\\\Developer\\\\ReactJs\\\\abc\\\\src\\\\feature\\\\Auth\\\\component\\\\Login\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { toastError } from \"../../../../components/Notification\";\nimport { login } from \"../../useSlice\";\nimport LoginForm from \"../LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLogin.propTypes = {};\n\nfunction Login({\n  handleClose\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async values => {\n    try {\n      const action = login(values);\n      const resultAction = await dispatch(action);\n      unwrapResult(resultAction);\n      toast.success(\"ƒêƒÉng nh·∫≠p th√†nh c√¥ng !\");\n      handleClose();\n    } catch (error) {\n      toast.error(error.message);\n    } //   // try {\n    //     // auto set username = email\n    //     values.username = values.email;\n    //     // const action = login(values);\n    //     const resultAction = await dispatch(action);\n    //     unwrapResult(resultAction);\n    //     // close dialog\n    //     // const { closeDialog } = props;\n    //     // if (closeDialog) {\n    //     //   closeDialog();\n    //     // }\n    //     // enqueueSnackbar('login successfully!!! üéâ', { variant: 'success' });\n    //   // } catch (error) {\n    //   //   console.log(\"Failed to login:\", error);\n    //     // enqueueSnackbar(error.message, { variant: 'error' });\n    //   }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleClose: handleClose,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["G:/Developer/ReactJs/abc/src/feature/Auth/component/Login/index.js"],"names":["unwrapResult","React","useDispatch","toast","toastError","login","LoginForm","Login","propTypes","handleClose","dispatch","handleSubmit","values","action","resultAction","success","error","message"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEAC,KAAK,CAACC,SAAN,GAAkB,EAAlB;;AAGA,SAASD,KAAT,CAAe;AAAEE,EAAAA;AAAF,CAAf,EAAgC;AAAA;;AAC9B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACrC,QAAI;AACF,YAAMC,MAAM,GAAGR,KAAK,CAACO,MAAD,CAApB;AACA,YAAME,YAAY,GAAG,MAAMJ,QAAQ,CAACG,MAAD,CAAnC;AACAb,MAAAA,YAAY,CAACc,YAAD,CAAZ;AACAX,MAAAA,KAAK,CAACY,OAAN,CAAc,wBAAd;AACAN,MAAAA,WAAW;AACZ,KAND,CAME,OAAOO,KAAP,EAAc;AACdb,MAAAA,KAAK,CAACa,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD,KAToC,CAWrC;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACD,GA9BD;;AAgCA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAER,WAAxB;AAAqC,MAAA,QAAQ,EAAEE;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxCQJ,K;UACUL,W;;;KADVK,K;AA0CT,eAAeA,KAAf","sourcesContent":["import { unwrapResult } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { toastError } from \"../../../../components/Notification\";\nimport { login } from \"../../useSlice\";\nimport LoginForm from \"../LoginForm\";\n\nLogin.propTypes = {\n};\n\nfunction Login({ handleClose }) {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values) => {\n    try {\n      const action = login(values);\n      const resultAction = await dispatch(action);\n      unwrapResult(resultAction);\n      toast.success(\"ƒêƒÉng nh·∫≠p th√†nh c√¥ng !\");\n      handleClose();\n    } catch (error) {\n      toast.error(error.message);\n    }\n\n    //   // try {\n    //     // auto set username = email\n    //     values.username = values.email;\n\n    //     // const action = login(values);\n    //     const resultAction = await dispatch(action);\n    //     unwrapResult(resultAction);\n\n    //     // close dialog\n    //     // const { closeDialog } = props;\n    //     // if (closeDialog) {\n    //     //   closeDialog();\n    //     // }\n\n    //     // enqueueSnackbar('login successfully!!! üéâ', { variant: 'success' });\n    //   // } catch (error) {\n    //   //   console.log(\"Failed to login:\", error);\n    //     // enqueueSnackbar(error.message, { variant: 'error' });\n    //   }\n  };\n\n  return (\n    <div>\n      <LoginForm handleClose={handleClose} onSubmit={handleSubmit} />\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}