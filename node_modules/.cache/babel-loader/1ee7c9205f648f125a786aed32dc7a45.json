{"ast":null,"code":"import axios from 'axios';\nconst axiosClient = axios.create({\n  baseURL: 'https://api.ezfrontend.com/',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\naxiosClient.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosClient.interceptors.response.use(function (response) {\n  return response.data;\n}, function (error) {\n  const {\n    config,\n    status,\n    data\n  } = error.response;\n  const URLS = ['/auth/local/register', '/auth/local'];\n\n  if (URLS.includes(config.url) && status === 400) {\n    const errorList = data.data || [];\n    const firstError = errorList.length > 0 ? errorList[0] : {};\n    const messageList = firstError.messages || [];\n    const firstMessage = messageList.length > 0 ? messageList[0] : {};\n    throw new Error(firstMessage.message);\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosClient;","map":{"version":3,"sources":["D:/Source/ReactJs/react-app/src/api/axiosClient.js"],"names":["axios","axiosClient","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","data","status","URLS","includes","url","errorList","firstError","length","messageList","messages","firstMessage","Error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE,6BADsB;AAE/BC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFsB,CAAb,CAApB;AAOAH,WAAW,CAACI,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CACE,UAAUC,MAAV,EAAkB;AAChB,SAAOA,MAAP;AACD,CAHH,EAIE,UAAUC,KAAV,EAAiB;AACf,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CANH;AASAR,WAAW,CAACI,YAAZ,CAAyBO,QAAzB,CAAkCL,GAAlC,CACE,UAAUK,QAAV,EAAoB;AAClB,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAHH,EAIE,UAAUJ,KAAV,EAAiB;AACf,QAAM;AAAED,IAAAA,MAAF;AAAUM,IAAAA,MAAV;AAAkBD,IAAAA;AAAlB,MAA2BJ,KAAK,CAACG,QAAvC;AACA,QAAMG,IAAI,GAAG,CAAC,sBAAD,EAAyB,aAAzB,CAAb;;AACA,MAAIA,IAAI,CAACC,QAAL,CAAcR,MAAM,CAACS,GAArB,KAA6BH,MAAM,KAAK,GAA5C,EAAiD;AAC/C,UAAMI,SAAS,GAAGL,IAAI,CAACA,IAAL,IAAa,EAA/B;AACA,UAAMM,UAAU,GAAGD,SAAS,CAACE,MAAV,GAAmB,CAAnB,GAAuBF,SAAS,CAAC,CAAD,CAAhC,GAAsC,EAAzD;AACA,UAAMG,WAAW,GAAGF,UAAU,CAACG,QAAX,IAAuB,EAA3C;AACA,UAAMC,YAAY,GAAGF,WAAW,CAACD,MAAZ,GAAqB,CAArB,GAAyBC,WAAW,CAAC,CAAD,CAApC,GAA0C,EAA/D;AACA,UAAM,IAAIG,KAAJ,CAAUD,YAAY,CAACE,OAAvB,CAAN;AACD;;AAED,SAAOf,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAhBH;AAmBA,eAAeR,WAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: 'https://api.ezfrontend.com/',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\naxiosClient.interceptors.request.use(\r\n  function (config) {\r\n    return config;\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosClient.interceptors.response.use(\r\n  function (response) {\r\n    return response.data;\r\n  },\r\n  function (error) {\r\n    const { config, status, data } = error.response;\r\n    const URLS = ['/auth/local/register', '/auth/local'];\r\n    if (URLS.includes(config.url) && status === 400) {\r\n      const errorList = data.data || [];\r\n      const firstError = errorList.length > 0 ? errorList[0] : {};\r\n      const messageList = firstError.messages || [];\r\n      const firstMessage = messageList.length > 0 ? messageList[0] : {};\r\n      throw new Error(firstMessage.message);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosClient;"]},"metadata":{},"sourceType":"module"}